on:
  push:
    branches:
    - main
    tags:
    - '!*'
  pull_request:
    branches:
    - main

name: main
jobs:
  build_linux:
    name: Build Linux
    container:
      image: ubuntu:18.04
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        compiler: [ gcc, clang ]
        include:
          - compiler: gcc
            cxx_compiler: g++
            compiler_flags: -Wall -Wextra -Werror -Wno-builtin-declaration-mismatch
          - compiler: clang
            cxx_compiler: clang++
            compiler_flags: -Wall -Wextra -Werror -Wno-unused-function -Wno-incompatible-library-redeclaration

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        set -e
        apt-get update -y
        apt-get install -y autoconf git libtool pkg-config ${{ matrix.compiler }}

    - name: Configure ImageMagick
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.cxx_compiler }}
        CFLAGS: ${{ matrix.compiler_flags }}
        CXXFLAGS: ${{ matrix.compiler_flags }}
      run: |
        autoreconf -fiv
        ./configure --with-quantum-depth=16 --enable-hdri=no --without-perl --prefix=/usr

    - name: Build ImageMagick
      run: |
        set -e
        make
        make check
        make install

  build_macos:
    name: Build MacOS
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        set -e
        export HOMEBREW_NO_AUTO_UPDATE=1
        brew install automake fftw flif jbigkit libxml2 pango libraqm librsvg

    - name: Configure ImageMagick
      run: |
        export CFLAGS="-Wall -Wextra -Werror -Wno-incompatible-library-redeclaration -Wno-deprecated-declarations -Wno-unused-parameter -Wno-unused-function -Wno-missing-declarations"
        export PKG_CONFIG_PATH="/usr/local/opt/libxml2/lib/pkgconfig"
        autoreconf -fiv
        ./configure --with-quantum-depth=16 --enable-hdri=no --without-perl --with-fftw --with-flif --with-rsvg

    - name: Build ImageMagick
      run: |
        set -e
        make install

  build_windows:
    name: Build Windows ${{matrix.platform}}
    runs-on: windows-2022

    strategy:
      fail-fast: false
      matrix:
        platform: [ x86, x64, arm64 ]

    steps:
    - uses: actions/checkout@v3
      with:
        path: ImageMagick

    - uses: actions/checkout@v3
      with:
        repository: ImageMagick/ImageMagick-Windows
        path: ImageMagick-Windows
        ref: refs/heads/main

    - name: Clone repositories
      shell: cmd
      run: |
        cd ImageMagick-Windows
        CloneRepositories.cmd https://github.com/ImageMagick shallow

    - name: Build configure
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cd ImageMagick-Windows\VisualMagick\configure
        msbuild configure.2022.sln /m /t:Rebuild /p:Configuration=Release,Platform=x64

    - name: Configure ImageMagick
      shell: cmd
      run: |
        cd ImageMagick-Windows\VisualMagick\configure
        configure.exe /noWizard /VS2022 /${{matrix.platform}} /smt

    - name: Build ImageMagick
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cd ImageMagick-Windows\VisualMagick
        msbuild VisualStaticMT.sln /m /t:Rebuild /p:Configuration=Release,Platform=${{matrix.platform}}

  build_msys2:
    name: Build MSYS2
    runs-on: windows-latest

    steps:
    - name: Prepare git
      run: git config --global core.autocrlf false

    - uses: actions/checkout@v3

    - uses: actions/checkout@v3
      with:
        repository: ImageMagick/ImageMagick-Windows
        path: ImageMagick-Windows
        ref: refs/heads/main

    - uses: msys2/setup-msys2@v2
      with:
        install: mingw-w64-x86_64-toolchain base-devel binutils
        update: true

    - name: Building ImageMagick
      run: cd ImageMagick-Windows && makepkg-mingw --noconfirm --syncdeps
      env:
        MINGW_ARCH: mingw64
        PKGEXT: ".pkg.tar.xz"
      shell: msys2 {0}
